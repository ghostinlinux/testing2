on:
  push:
    branches: [ main ]
    paths:
      - 'tests/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'tests/**'
  workflow_dispatch:
    inputs:
      shardIndex:
        description: 'Shard Index (comma-separated values)'
        required: true
        default: '1,2,3,4,5,6,7,8'
      shardTotal:
        description: 'Shard Total'
        required: true
        default: 8
jobs:
  measure_execution:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shardIndex: ${{ fromJson('["' + github.event.inputs.shardIndex.replace(',', '","') + '"]') }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  
    - name: Set shardIndex environment variable
      run: echo 'SHARD_INDEX=${{ matrix.shardIndex }}' >> $GITHUB_ENV          
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
    - name: Install dependencies
      run: npm install
    - name: Install Playwright Browsers
      run: npx playwright install
    - name: Run Playwright tests
      run: |
        MEASURE_EXECUTION_TIME=true npx playwright test --shard=${{ matrix.shardIndex }}/${{ github.event.inputs.shardTotal }} --repeat-each=1
    - name: Upload JSON File
      uses: actions/upload-artifact@v4
      with:
        name: test_execuction_results_${{ matrix.shardIndex }}
        path: test_execuction_results_${{ matrix.shardIndex }}.json
  combine_test_execution_result:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs:
      - measure_execution
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - run: |
        if [[ -f test_execuction_results.json ]]; then
            rm test_execuction_results.json
        fi 
    - name: Download JSON Files
      run: |
        shardTotal=${{ github.event.inputs.shardTotal }}
        shardIndexArray=(${{ fromJson('["' + github.event.inputs.shardIndex.replace(',', '","') + '"]') }})
        for i in "${shardIndexArray[@]}"; do
          echo "Downloading test_execuction_results_$i.json"
          gh api -H "Accept: application/vnd.github.v3+json" \
            /repos/${{ github.repository }}/actions/artifacts \
            | jq -r ".artifacts[] | select(.name == \"test_execuction_results_$i\") | .archive_download_url" \
            | xargs -n 1 curl -L -o test_execuction_results_$i.json
        done
    - uses: sergeysova/jq-action@v2
      with:
        cmd: jq -s '[.[][]]' test_execuction_results_*.json > test_execuction_results.json
    - run: rm test_execuction_results_*.json  
    - uses: actions/upload-artifact@v4
      with:
        name: test_execuction_results
        path: test_execuction_results.json              
    - name: Commit Json File
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
         commit_message: 'Update Execution Time file'
         file_pattern: "*.json"