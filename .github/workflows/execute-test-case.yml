name: Execute Test Case
on:
  workflow_dispatch:
    inputs:
      shardIndex:
        description: "Provide shard indices (comma-separated)"
        required: true
        default: "1,2,3,4,5,6,7,8,9,10"
      shardTotal:
        description: "Provide total number of shards"
        required: true
        default: 10

jobs:
  test_smart_orchestration:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shardIndex: ${{ fromJson(inputs.shardIndex) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Set shardTotal environment variable
        run: echo "SHARD_TOTAL=${{ inputs.shardTotal }}" >> $GITHUB_ENV     
      - name: Install dependencies
        run: npm install
      - name: Install Playwright Browsers
        run: npx playwright install
      - name: Get test names
        id: getTestNames
        run: |
          test_names=$(node -e 'import("sharding-pk-play").then(module => console.log(module.orchestrateTestsForShard(${{ matrix.shardIndex }}))).catch(err => console.error(err))')
          echo "::set-output name=test_names::$test_names"
      - name: Run Playwright tests
        run: |
          npx playwright test --grep "${{ steps.getTestNames.outputs.test_names }}"

  test_no_orchestration:
    needs:
      - test_smart_orchestration
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shardIndex: ${{ fromJson(inputs.shardIndex) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Set shardTotal environment variable
        run: echo "SHARD_TOTAL=${{ inputs.shardTotal }}" >> $GITHUB_ENV     
      - name: Install dependencies
        run: npm install
      - name: Install Playwright Browsers
        run: npx playwright install
      - name: Run Playwright tests
        run: |
          npx playwright test --shard=${{ matrix.shardIndex }}/${{ inputs.shardTotal }}
